<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.0.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<context:component-scan
		base-package="com.wewishwell.shop" />

	<beans:bean name="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="10000000"></beans:property>
		<beans:property name="maxInMemorySize" value="100000"></beans:property>
		<beans:property name="uploadTempDir" value="temp"></beans:property>
		<beans:property name="defaultEncoding" value="utf-8"></beans:property>
	</beans:bean>

	<websocket:handlers >
		<websocket:mapping path="/test2" handler="myHandler" />
		<websocket:mapping path="/talk" handler="myHandler" />
		<websocket:handshake-interceptors>
			<beans:bean
				class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor" />
		</websocket:handshake-interceptors>
		<websocket:sockjs />
	</websocket:handlers>
	<beans:bean id="myHandler"
		class="com.wewishwell.shop.websocket.WebSocketHandler" />
		
		
		<websocket:message-broker application-destination-prefix="/shop"> <!--클라이언트가 서버로 보낼때 붙여야하는  url=prefix tomcat에서 모듈에 있는경로 -->
       	 <websocket:stomp-endpoint path="/test2">	<!--서버와 클라이언트가 WebSocket 통신을 하기 위한 엔드포인트 클라이언트 측에서 Socket을 생성할 때 여기에 정의한 문자열로 생성해야 통신이 된다.  -->
            <websocket:sockjs/>
       	 </websocket:stomp-endpoint>
        <websocket:simple-broker prefix="/topic"/> <!--일종의 topic 해당 문자열로 시작하는 message 주소값을 받아서 처리하는 broker를 활성화  -->
    	</websocket:message-broker>

	</beans:beans>
